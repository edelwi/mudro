# Generated by 'git init' or 'git clone', if it's empty
# Rust source code file extension
*.rs

# Cargo output directory
/target

# .cargo directory, if it exists
.cargo/

# build artifacts, if it exists
/build

# examples directory, if it exists
/examples

# Library source code
/src/lib.rs

# Binaries
/src/bin/*.rs

# Benchmarks
/src/bench/*.rs

# Tests
/src/test/*.rs

# Dependencies managed by rustup, if it exists
.rustup/

# Rustfmt source file, if it exists
.rustfmt.toml

# Rust Language Server configuration file, if it exists
.rls.toml

# Rust.vim configuration file, if it exists
.rust-client.json

# Output directory for the 'compiletest' crate, if it exists
/target/compiletest/

# Rust Compiler's stage2 build artifacts
/build/stage2

# Rust Compiler's stage3 build artifacts
/build/stage3

# Rust Compiler's stage1 build artifacts, if it exists
/build/stage1

# Clippy lint output directory, if it exists
/target/clippy/

# Debugging information, if it exists
.debug/

# Release binaries, if it exists
/target/release/

# Definitions for .dll/.so files, if it exists
/target/deps/

# Dynamic library for LTO (Link Time Optimization), if it exists
/target/lto/

# Exported library names for linking against C/C++ programs, if it exists
/target/lib/*.rlib

# Symbol files, if it exists
/target/deps/*/*.sym

# Thin archive libraries, if it exists
/target/deps/*/*.thinlto.a

# Linker archive files, if it exists
/target/deps/*/*.archive.lto.a

# Documentation output directory, if it exists
/target/doc/

# Documentation output for libraries, if it exists
/target/doc/*/*-*.html

# Cargo project check output, if it exists
/target/check/

# Rustfix source code backup files, if it exists
/target/rustfix/*.rs.bk

# Code coverage output directory, if it exists
/target/cov/

# End of https://www.toptal.com/developers/gitignore/api/rust